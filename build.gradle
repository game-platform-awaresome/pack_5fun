buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://repo.maven.apache.org/maven2' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
    }
}

group 'com.5fun'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://repo.maven.apache.org/maven2' }
    maven { url 'https://repo.spring.io/libs-milestone' }
    mavenCentral()
}

dependencies {
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.7'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka'
//    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '2.0.0.M2'
    compile group: 'com.qcloud', name: 'cos_api', version: '4.4',{
        exclude module: 'slf4j-log4j12'
    }
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.wufan.PackDaemon'
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.3.4.RELEASE'
    }
}

tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
